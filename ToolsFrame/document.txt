HTF
	
	单页面整体框架分为三部分
	
		头部
			
			在普遍的APP上面都有一个不成文的规定，就是必须要有头部导航
			
			头部主要的功能就是：返回、标题、辅助功能、搜索、分类标签、用户信息（头像、名字---部分APP）
			
			尺寸： 49像素的高度+ 1像素的底部边框线
			
			样式：
			
				背景颜色：主题色
				
				标题字体大小：18像素
				
				返回按钮：14像素
				
				页面顶部悬浮
				
				
			设计方式：
				
				使用流动布局并默认悬浮在页面顶部
				
				分为三份： 左 - 中 - 右
				
				左：
					返回 | 上个页面的未读信息
				
				中：
					多元化展示，可以通过指定的要求进行不同信息的展示
					
					标题 | 搜索 | 标签 | 用户信息
					
				右：
					定义为辅助
					
					分享 | 更多 | 设置 ...
				
		内容
		
			该部分是展示具体的页面信息部分
			
			设计方式：
			
				不采用定位的方式进行布局，由于该部分是在页面中间部分，设计的时候要考虑到头部和底部的状态
				
				若头部是悬浮的则就需要添加相对应的顶部内边距，不悬浮就不添加顶部内边距
				
				若底部（一直悬浮在页面底部）存在，则久需要添加相对应的底部内边距，不存在就不添加底部内边距
				
			
			内置效果：
			
				手指从左到右滑动的时候可以进行返回上一级页面，若没有上级页面则就无法进行滑动
	
		底部
		
			该部分主要是用来做内容的替换
			
			
			根据常规的APP底部按钮的样式
				
				上图下文，全图，全文
				
				部分APP按钮数量为奇数的时候 中间部分凸起，中间部分普遍是用来做发布，功能展示，或不作为内容切换的功能
				
				
				
	据我本人的观察，微信就是这样的布局：上中下
	
	
	
	第一步:
		
		基础版的头部 ===》 返回 标题 分享
		
		基础版的底部 ===》 五个按钮 上图下文
		
	

2019-01-25 ===》 已实现

data 设计模型：


	按照模版来进行划分
	
	
		每一个模版都有相对应的 Data
		
		假设：
			A 模版 有定义data属性
			
				data:{
					name:'A模版',
				}
				
			B 模版 有定义data属性
			
				data:{
					name:'A模版'
				}
		
		
		HTF 就会将每个模版定义的data值进行储存 
			
			储存方式
			
			this.data[模版名] 
			
			这样就不会出现data取值错误
			
			